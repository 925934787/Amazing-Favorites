@page "/popup"
@using Microsoft.AspNetCore.Components
@using Newbe.BookmarkManager.Services
@inherits Blazor.BrowserExtension.Pages.BasePage

<div style="width: 640px;padding: 20px;">
    <Row>
        <Col Span="24">
            @if (_formModel.IsLoading)
            {
                <Progress Percent=80 Status="@ProgressStatus.Active" ShowInfo="false"></Progress>
            }
            else
            {
                @if (!_formModel.IsShowEditor)
                {
                    @if (_formModel.IsRemoved)
                    {
                        <Alert Type="@AlertType.Success"
                               Message="Bookmark Removed"
                               ShowIcon="false"/>
                    }
                    else if (!_formModel.IsAvailable)
                    {
                        <Alert Type="@AlertType.Warning"
                               Message="This tab can not be added to bookmarks"
                               ShowIcon="false"/>
                    }
                }
                else
                {
                    @if (_formModel.IsFirstAdded)
                    {
                        <Alert Type="@AlertType.Success"
                               Message="Bookmark Added!"
                               ShowIcon="false"/>
                    }
                    @if (_formModel.BookmarkTreeNode != null)
                    {
                        <Button OnClick="RemoveBookmarkAsync"
                                Style="width: 100%"
                                Type="dashed"
                                Danger>
                            Remove
                        </Button>
                    }
                    <Divider/>
                    <Form Layout="Vertical" Model="_formModel">

                        <FormItem Label="Title">
                            <Input @bind-Value="@context.Title"/>
                        </FormItem>

                        <FormItem Label="Tags">
                            @foreach (var tag in context.Tags)
                            {
                                <Tag Closable="true"
                                     OnClosing="e => OnRemovingTag(tag)"
                                     Color="@WebHelper.GetTagColor(tag)">
                                    @tag
                                </Tag>
                            }
                            <span style="display: @(context.NewTagInputVisible ? "inline-block" : "none")">
                                <Input OnPressEnter="e => OnCreatingTag()"
                                       OnBlur="e => OnCreatingTag()"
                                       @ref="@context.NewTagRef"
                                       @bind-Value="@context.NewTag"
                                       Placeholder="enter to add tag"
                                       AutoFocus/>
                            </span>
                            <span style="display: @(!context.NewTagInputVisible ? "inline-block" : "none")">
                                <Tag Class="site-tag-plus" OnClick="e => context.NewTagInputVisible = true">
                                    <Icon Type="plus"/>New Tag
                                </Tag>
                            </span>
                        </FormItem>

                        <FormItem Label="Url">
                            <Input @bind-Value="@context.Url" Disabled/>
                        </FormItem>

                        <FormItem >
                            @if (!_formModel.IsUpdateSuccess)
                            {
                                <Button Type="@ButtonType.Primary"
                                        Style="width: 100%"
                                        OnClick="UpdateAsync"
                                        Loading="@_formModel.IsUpdateButtonLoading">
                                    Update
                                </Button>
                            }
                            else
                            {
                                <Alert Type="@AlertType.Success"
                                       Message="Update success"
                                       ShowIcon="true"/>
                            }


                        </FormItem>
                    </Form>
                }
            }


            <Divider/>
            <Button OnClick="OpenManager" Style="width: 100%">Open Manager</Button>
        </Col>
    </Row>
</div>